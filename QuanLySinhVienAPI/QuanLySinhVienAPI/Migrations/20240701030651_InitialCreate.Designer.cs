// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuanLySinhVienAPI.Entities;

#nullable disable

namespace QuanLySinhVienAPI.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20240701030651_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QuanLySinhVienAPI.Entities.GiangVien", b =>
                {
                    b.Property<int>("IdGiangVien")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdGiangVien"));

                    b.Property<string>("NameGiangVien")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdGiangVien");

                    b.ToTable("giangViens");
                });

            modelBuilder.Entity("QuanLySinhVienAPI.Entities.KhoaHoc", b =>
                {
                    b.Property<int>("IdKhoaHoc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdKhoaHoc"));

                    b.Property<string>("NameKhoaHoc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdKhoaHoc");

                    b.ToTable("khoaHocs");
                });

            modelBuilder.Entity("QuanLySinhVienAPI.Entities.LopHoc", b =>
                {
                    b.Property<int>("LopId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LopId"));

                    b.Property<int>("IdMonHoc")
                        .HasColumnType("int");

                    b.Property<string>("NameLop")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("LopId");

                    b.HasIndex("IdMonHoc");

                    b.ToTable("lopHocs");
                });

            modelBuilder.Entity("QuanLySinhVienAPI.Entities.MonHoc", b =>
                {
                    b.Property<int>("IdMonHoc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMonHoc"));

                    b.Property<int>("IdGiangVien")
                        .HasColumnType("int");

                    b.Property<string>("NameMonHoc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdMonHoc");

                    b.HasIndex("IdGiangVien");

                    b.ToTable("monHocs");
                });

            modelBuilder.Entity("QuanLySinhVienAPI.Entities.SinhVien", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IdKhoaHoc")
                        .HasColumnType("int");

                    b.Property<int>("LopId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("IdKhoaHoc");

                    b.HasIndex("LopId");

                    b.ToTable("sinhViens");
                });

            modelBuilder.Entity("QuanLySinhVienAPI.Entities.LopHoc", b =>
                {
                    b.HasOne("QuanLySinhVienAPI.Entities.MonHoc", "monHoc")
                        .WithMany("lopHocs")
                        .HasForeignKey("IdMonHoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("monHoc");
                });

            modelBuilder.Entity("QuanLySinhVienAPI.Entities.MonHoc", b =>
                {
                    b.HasOne("QuanLySinhVienAPI.Entities.GiangVien", "giangViens")
                        .WithMany("monHocs")
                        .HasForeignKey("IdGiangVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("giangViens");
                });

            modelBuilder.Entity("QuanLySinhVienAPI.Entities.SinhVien", b =>
                {
                    b.HasOne("QuanLySinhVienAPI.Entities.KhoaHoc", "khoaHocs")
                        .WithMany("sinhViens")
                        .HasForeignKey("IdKhoaHoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLySinhVienAPI.Entities.LopHoc", "lopHocs")
                        .WithMany("sinhViens")
                        .HasForeignKey("LopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("khoaHocs");

                    b.Navigation("lopHocs");
                });

            modelBuilder.Entity("QuanLySinhVienAPI.Entities.GiangVien", b =>
                {
                    b.Navigation("monHocs");
                });

            modelBuilder.Entity("QuanLySinhVienAPI.Entities.KhoaHoc", b =>
                {
                    b.Navigation("sinhViens");
                });

            modelBuilder.Entity("QuanLySinhVienAPI.Entities.LopHoc", b =>
                {
                    b.Navigation("sinhViens");
                });

            modelBuilder.Entity("QuanLySinhVienAPI.Entities.MonHoc", b =>
                {
                    b.Navigation("lopHocs");
                });
#pragma warning restore 612, 618
        }
    }
}
